package com.ezpnix.writeon.presentation.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF004D40) // Dark teal
val primaryContainerLight = Color(0xFFE8F5E9) // Light green background
val onPrimaryContainerLight = Color(0xFF388E3C) // Medium green
val secondaryLight = Color(0xFF64B5F6) // Light blue
val onSecondaryLight = Color(0xFFFFFFFF) // White for contrast
val secondaryContainerLight = Color(0xFFE3F2FD) // Light blue background
val onSecondaryContainerLight = Color(0xFF1E88E5) // Medium blue
val tertiaryLight = Color(0xFFFFD54F) // Soft yellow
val onTertiaryLight = Color(0xFF000000) // Black for contrast
val tertiaryContainerLight = Color(0xFFFFF8E1) // Light yellow background
val onTertiaryContainerLight = Color(0xFFF57F17) // Dark yellow
val errorLight = Color(0xFFD32F2F) // Vivid red
val onErrorLight = Color(0xFFFFFFFF) // White for contrast
val errorContainerLight = Color(0xFFFFCDD2) // Light red background
val onErrorContainerLight = Color(0xFFB00020) // Dark red
val backgroundLight = Color(0xFFFFFFFF) // Pure white
val onBackgroundLight = Color(0xFF000000) // Black for readability
val surfaceLight = Color(0xFFFFFFFF) // Pure white
val onSurfaceLight = Color(0xFF000000) // Black for readability
val surfaceVariantLight = Color(0xFFF5F5F5) // Very light gray
val onSurfaceVariantLight = Color(0xFF757575) // Medium gray
val outlineLight = Color(0xFFBDBDBD) // Light gray
val outlineVariantLight = Color(0xFFE0E0E0) // Very light gray
val scrimLight = Color(0xFF000000) // Black for overlays
val inverseSurfaceLight = Color(0xFF121212) // Very dark gray
val inverseOnSurfaceLight = Color(0xFFFFFFFF) // White for contrast
val inversePrimaryLight = Color(0xFF81C784) // Match primaryLight
val surfaceDimLight = Color(0xFFF5F5F5) // Very light gray
val surfaceBrightLight = Color(0xFFFFFFFF) // Pure white
val surfaceContainerLowestLight = Color(0xFFFFFFFF) // Pure white
val surfaceContainerLowLight = Color(0xFFF5F5F5) // Very light gray
val surfaceContainerLight = Color(0xFFFAFAFA) // Slightly darker light gray
val surfaceContainerHighLight = Color(0xFFF0F0F0) // Light gray
val surfaceContainerHighestLight = Color(0xFFE0E0E0) // Light gray


val primaryDark = Color(0xFFB9F6CA) // Soft mint green
val onPrimaryDark = Color(0xFF004D40) // Dark teal
val primaryContainerDark = Color(0xFF004D40) // Medium teal
val onPrimaryContainerDark = Color(0xFFE0F2F1) // Light teal background
val secondaryDark = Color(0xFFBBDEFB) // Light sky blue
val onSecondaryDark = Color(0xFF0D47A1) // Dark blue
val secondaryContainerDark = Color(0xFF1E88E5) // Medium blue
val onSecondaryContainerDark = Color(0xFFE3F2FD) // Light blue background
val tertiaryDark = Color(0xFFFFF59D) // Soft yellow
val onTertiaryDark = Color(0xFFF57F17) // Dark yellow
val tertiaryContainerDark = Color(0xFFFFE082) // Medium yellow
val onTertiaryContainerDark = Color(0xFFFFF8E1) // Light yellow background
val errorDark = Color(0xFFFF8A80) // Light red
val onErrorDark = Color(0xFFD32F2F) // Vivid red
val errorContainerDark = Color(0xFFB00020) // Dark red
val onErrorContainerDark = Color(0xFFFFCDD2) // Light red background
val backgroundDark = Color(0xFF121212) // Very dark gray
val onBackgroundDark = Color(0xFFE0E0E0) // Light gray for readability
val surfaceDark = Color(0xFF121212) // Very dark gray
val onSurfaceDark = Color(0xFFE0E0E0) // Light gray for readability
val surfaceVariantDark = Color(0xFF2C2C2C) // Dark gray
val onSurfaceVariantDark = Color(0xFFBDBDBD) // Light gray
val outlineDark = Color(0xFF8A8A8A) // Medium gray
val outlineVariantDark = Color(0xFF2C2C2C) // Dark gray
val scrimDark = Color(0xFF000000) // Black for overlays
val inverseSurfaceDark = Color(0xFFE0E0E0) // Light gray
val inverseOnSurfaceDark = Color(0xFF121212) // Very dark gray
val inversePrimaryDark = Color(0xFFB9F6CA) // Match primaryDark
val surfaceDimDark = Color(0xFF121212) // Very dark gray
val surfaceBrightDark = Color(0xFF1E1E1E) // Dark gray
val surfaceContainerLowestDark = Color(0xFF0A0A0A) // Nearly black
val surfaceContainerLowDark = Color(0xFF1A1A1A) // Dark gray
val surfaceContainerDark = Color(0xFF222222) // Slightly lighter dark gray
val surfaceContainerHighDark = Color(0xFF2C2C2C) // Dark gray
val surfaceContainerHighestDark = Color(0xFF333333) // Lightest dark gray